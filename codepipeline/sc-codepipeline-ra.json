{
    "Description": "ServiceCatalog Portfolio CI/CD Automation Pipeline (fdp-1p4dlgcoo)",
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "CodeCommitRepoName": {
            "Type":"String",
            "Description":"The project name, also the CodeCommit Repository name",
            "Default":"SCPortfoliosRepo"
        },"ChildAccountAccess":{
            "Type":"CommaDelimitedList",
            "Description":"Comma delimited list of AccountIds to Grant GetObject Access to the Deployed Templates Bucket"
        }
    },
    "Conditions":{
        "CreateBucketPolicy" : {"Fn::Not": [{"Fn::Equals" : [{ "Fn::Select" : [ "0", {"Ref": "ChildAccountAccess"} ] }, ""]}]}
    },
    "Resources": {
        "PipelineArtifacts": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "Private",
				"BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            }
        },
        "DeployedTemplates": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "Private",
				"BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            }
        },
        "DeployedTemplatesBucketPolicy":{
           "Type" : "AWS::S3::BucketPolicy",
           "Condition":"CreateBucketPolicy",
           "Properties" : {
              "Bucket" : {"Ref" : "DeployedTemplates"},
              "PolicyDocument" : {"Statement":[{
                "Effect": "Allow",
                "Principal": {
                    "AWS": {"Fn::Split": [",",  
                        {"Fn::Sub": [ "arn:aws:iam::${acc}:role/AWSCloudFormationStackSetExecutionRole", {
                            "acc": {"Fn::Join": [
                                ":role/AWSCloudFormationStackSetExecutionRole,arn:aws:iam::", 
                                { "Ref": "ChildAccountAccess" }
                            ]}
                        }]}
                    ]}
                },
                "Action": "s3:GetObject", 
                "Resource": { "Fn::Sub" : ["${bucketarn}/*", {"bucketarn": { "Fn::GetAtt": ["DeployedTemplates", "Arn"]}}] }
              }]}
           }
        },
        "SCPortfoliosRepo": {
          "Type" : "AWS::CodeCommit::Repository",
          "Properties" : {
            "RepositoryDescription" : "Repository for Service Catalog Portfolios and products",
            "RepositoryName" : {"Ref":"CodeCommitRepoName"}
          }
        },
        "CodeBuildRole" :{
            "Type":"AWS::IAM::Role",
            "Properties":{
                "Description":"CodePipelie role for validating and deploying artifacts. This role will need expansive powers to test templates.",
                "AssumeRolePolicyDocument": {
                    "Version":"2012-10-17",
                    "Statement":{
                        "Effect":"Allow",
                        "Principal":{
                            "Service":"codebuild.amazonaws.com"
                        },
                        "Action":"sts:AssumeRole"
                    }
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSServiceCatalogAdminFullAccess",
                    "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
                    "arn:aws:iam::aws:policy/AmazonSSMFullAccess",
                    "arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess"
                ],
                "Policies": [ { 
                    "PolicyName":"CodeBuildManageS3Artifacts",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:CreateBucket",
                                    "s3:DeleteBucket",
                                    "s3:DeleteBucketPolicy",
                                    "s3:GetBucketPolicy",
                                    "s3:GetBucketPolicyStatus",
                                    "s3:PutBucketPolicy",
                                    "s3:GetBucketLocation",
                                    "s3:DeleteObject",
                                    "s3:GetObject",
                                    "s3:PutObject",
                                    "s3:ListBucket"
                                ],
                                "Resource": [
                                    {"Fn::GetAtt":["PipelineArtifacts", "Arn"]},
                                    {"Fn::Sub" : ["${bucketarn}/*", {"bucketarn": { "Fn::GetAtt": ["PipelineArtifacts", "Arn"]}}] },
                                    {"Fn::GetAtt":["DeployedTemplates", "Arn"]},
                                    {"Fn::Sub" : ["${bucketarn}/*", {"bucketarn": { "Fn::GetAtt": ["DeployedTemplates", "Arn"]}}] },
                                    {"Fn::Sub":"arn:aws:s3:::taskcat-*"}
                                ]
                            },{
                              "Effect": "Allow",
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams"
                                ],
                                  "Resource": [
                                    {"Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"}
                                ]
                            },{
                              "Effect": "Allow",
                              "Action": [
                                "logs:CreateLogGroup"
                                ],
                                  "Resource": "*"
                            }  
                        ]
                    }
                },{ 
                    "PolicyName":"CodeBuildManageCloudformation",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudformation:DescribeStackResource",
                                    "cloudformation:DescribeStackResources",
                                    "cloudformation:GetTemplate",
                                    "cloudformation:ListStackSets",
                                    "cloudformation:DescribeStackEvents",
                                    "cloudformation:DescribeStacks",
                                    "cloudformation:DescribeStackSet",
                                    "cloudformation:CreateStack",
                                    "cloudformation:DeleteStack",
                                    "cloudformation:UpdateStack",
                                    "cloudformation:UpdateStackSet",
                                    "cloudformation:CreateStackInstances",
                                    "cloudformation:UpdateStackInstances",
                                    "cloudformation:DescribeStackEvents",
                                    "cloudformation:SetStackPolicy"
                                ],
                                "Resource": [
                                    {"Fn::Sub": "arn:aws:cloudformation:*:${AWS::AccountId}:stack/tcat-tag-*"},
                                    {"Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"},
                                    {"Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/SC-IAC-automated-portfolio/*"},
                                    {"Fn::Sub": "arn:aws:cloudformation:*:${AWS::AccountId}:stackset/SC-IAC-automated-IAMroles:*"},
                                    {"Fn::Sub": "arn:aws:cloudformation:*:${AWS::AccountId}:stackset/SC-IAC-automated-portfolio:*"}
                                ]
                            },{
                                "Effect": "Allow",
                                "Action": [
                                    "cloudformation:ListStacks",
                                    "cloudformation:ValidateTemplate"
                                ],
                                "Resource": "*"
                            }
                        ]
                    }
                },{ 
                    "PolicyName":"TaskCatEC2ValidationPolicy",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "iam:ListPolicies",
                                    "iam:ListRoles"
                                ],
                                "Resource": "*"
                            },{
                                "Effect": "Allow",
                                "Action": [
                                    "iam:AddRoleToInstanceProfile",
                                    "iam:ListRolePolicies",
                                    "iam:CreateRole",
                                    "iam:DeleteRole",
                                    "iam:GetRole",
                                    "iam:CreateInstanceProfile",
                                    "iam:DeleteInstanceProfile",
                                    "iam:RemoveRoleFromInstanceProfile",
                                    "iam:PutRolePolicy",
                                    "iam:DeleteRolePolicy",
                                    "iam:DetachRolePolicy",
                                    "iam:AttachRolePolicy",
                                    "iam:PutGroupPolicy",
                                    "iam:DeleteGroupPolicy",
                                    "iam:DetachGroupPolicy",
                                    "iam:AttachGroupPolicy",
                                    "iam:PassRole"
                                ],
                                "Resource": [
                                    {"Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-CodeBuildRole-*"},
                                    {"Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/SC-RA-IACPipeline-*"},
                                    {"Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/tcat-tag-*"},
                                    {"Fn::Sub": "arn:aws:iam::${AWS::AccountId}:instance-profile/tcat-tag-*"}
                                ]
                            }
                        ]
                    }
                },{ 
                    "PolicyName":"CodeBuildManageCodeBuild",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                              "Effect":"Allow",
                              "Action":[
                                "codebuild:ListBuildsForProject",
                                "codebuild:UpdateProject",
                                "codebuild:CreateProject"
                              ],
                              "Resource":[
                                 {"Fn::Sub":"arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/*"}
                             ]
                            },{
                              "Effect":"Allow",
                              "Action":[
                                "codebuild:ListBuilds",
                                "codebuild:ListProjects"
                              ],
                              "Resource":"*"
                            }
                        ]
                    }
                    }
                ]
            }
        },
        "CodePipelineManageStepsRole":{
            "Type":"AWS::IAM::Role",
            "Properties":{
                "Description":"CodePipelie role for moving objects through the build and deploy stages.",
                "AssumeRolePolicyDocument": {
                    "Version":"2012-10-17",
                    "Statement":{
                        "Effect":"Allow",
                        "Principal":{
                            "Service":"codepipeline.amazonaws.com"
                        },
                        "Action":"sts:AssumeRole"
                    }
                },
                "Policies": [ { 
                    "PolicyName":"CodePipelineManageS3Artifacts",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:GetObject",
                                    "s3:GetObjectVersion",
                                    "s3:GetBucketVersioning",
                                    "s3:PutObject"
                                ],
                                "Resource": [
                                    {"Fn::GetAtt":["PipelineArtifacts", "Arn"]},
                                    {"Fn::Sub" : ["${bucketarn}/*", {"bucketarn": { "Fn::GetAtt": ["PipelineArtifacts", "Arn"]}}] }
                                ]
                            }
                        ]
                    }
                    },{ 
                    "PolicyName":"codepipeline-codecommit",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {"Effect": "Allow",
                            "Action": [
                                "codecommit:GetBranch",
                                "codecommit:GetCommit",
                                "codecommit:UploadArchive",
                                "codecommit:GetUploadArchiveStatus",
                                "codecommit:CancelUploadArchive"
                            ],
                            "Resource": { "Fn::GetAtt" : ["SCPortfoliosRepo", "Arn" ] }
                            },{
                              "Effect":"Allow",
                              "Action":[
                                "codebuild:StartBuild",
                                "codebuild:StartBuild",
                                "codebuild:StopBuild",
                                "codebuild:BatchGetProjects",
                                "codebuild:BatchGetBuilds",
                                "codebuild:ListBuildsForProject"
                              ],
                              "Resource":[
                                {"Fn::Sub":["arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${cbproj}", {"cbproj": {"Ref":"CodeBuildDeployS3Project"}} ]},
                                {"Fn::Sub":["arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${cbproj}", {"cbproj": {"Ref":"CodeBuildCFNNAG"}} ]}
                             ]                              
                            },{
                              "Effect":"Allow",
                              "Action":[
                                "codebuild:ListBuilds",
                                "codebuild:ListProjects",
                                "codebuild:ListCuratedEnvironmentImages",
                                "codebuild:ListSourceCredentials"
                              ],
                              "Resource":"*"
                            }
                        ]
                    }
                    }
                
                ]
            }            
        },        
        "CodeBuildDeployS3Project" : {
            "Type": "AWS::CodeBuild::Project",
            "Properties": {
              "Name": "DeployServiceCatalogPortfolio",
              "Description": "Copy templates to S3 then update the portfolio.",
              "ServiceRole": {"Fn::GetAtt": ["CodeBuildRole","Arn"]},
              "Artifacts": {
                "Type": "CODEPIPELINE"
              },
              "Environment": {
                "Type": "LINUX_CONTAINER",
                "ComputeType": "BUILD_GENERAL1_SMALL",
                "Image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
                "EnvironmentVariables":[
                    {
                      "Name": "DEPLOY_BUCKET",
                      "Value": {"Ref":"DeployedTemplates"},
                      "Type": "PLAINTEXT"
                    },{
                      "Name": "PIPELINE_NAME",
                      "Value": {"Ref":"AWS::StackName"},
                      "Type": "PLAINTEXT"
                    }  
                ]
              },
              "Source": {
                "Type": "CODEPIPELINE",
                "BuildSpec":"codepipeline/buildspec.yml"
              },
              "TimeoutInMinutes": 10
            }            
        },        
        "CodeBuildCFNNAG" : {
            "Type": "AWS::CodeBuild::Project",
            "Properties": {
              "Name": "Lint_Template",
              "Description": "run CFN_NAG on templates for linting and security checking",
              "ServiceRole": {"Fn::GetAtt": ["CodeBuildRole","Arn"]},
              "Artifacts": {
                "Type": "CODEPIPELINE"
              },
              "Environment": {
                "Type": "LINUX_CONTAINER",
                "ComputeType": "BUILD_GENERAL1_SMALL",
                "Image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0"
              },
              "Source": {
                "Type": "CODEPIPELINE",
                "BuildSpec":"codepipeline/buildspec-cnfnag.yml"
              },
              "TimeoutInMinutes": 10
            }
        },
        "ProductPipeline" :{
          "Type" : "AWS::CodePipeline::Pipeline",          
          "Properties" : {
            "ArtifactStore" :{
                "Type": "S3",
                "Location":{"Ref":"PipelineArtifacts"}
            },
            "Name" : "ServiceCatalog-ProductPipeline",
            "RoleArn" : {"Fn::GetAtt":["CodePipelineManageStepsRole","Arn"]},
            "Stages" : [ 
                {
                    "Name": "SourceStageCodeCommit",
                    "Actions": [
                        {
                          "InputArtifacts":[],
                          "Name":"Source",
                          "ActionTypeId": {
                              "Category": "Source",
                              "Owner": "AWS",
                              "Version": "1",
                              "Provider": "CodeCommit"
                          },
                          "Configuration": {
                              "RepositoryName":{"Fn::GetAtt":["SCPortfoliosRepo","Name"]},
                              "BranchName":"master"
                          },
                          "OutputArtifacts":[
                              {
                                "Name":"SourceArtifacts"
                              }
                          ]
                        }
                    ]
                },{
                    "Name": "TemplateValidation",
                    "Actions": [
                        {
                            "InputArtifacts": [
                                { "Name": "SourceArtifacts" }
                            ],
                            "Name": "Lint_Template",
                            "ActionTypeId": {
                                "Category": "Build",
                                "Owner": "AWS",
                                "Version": "1",
                                "Provider": "CodeBuild"
                            },
                            "Configuration": {
                                "ProjectName":{"Ref":"CodeBuildCFNNAG"}
                            },
                            "RunOrder": 1
                        }
                     ]
                },{
                    "Name": "CopyAndDeploy",
                    "Actions": [{
                      "InputArtifacts":[{"Name":"SourceArtifacts"}],
                      "Name":"CopyAndDeploy",
                      "ActionTypeId": {
                          "Category": "Build",
                          "Owner": "AWS",
                          "Version": "1",
                          "Provider": "CodeBuild"
                      },
                      "Configuration": {
                          "ProjectName":{"Ref":"CodeBuildDeployS3Project"}
                      }
                    }]
                }
            ]
          }
        }
    },
    "Outputs": {
        "DeployedTemplatesBucket": {
          "Value": { "Fn::Join": [ "", [
                        "https://",{ "Fn::GetAtt": ["DeployedTemplates","DomainName"] },"/"
                   ]]},
          "Description": "S3 bucket url for deployed templates."
        },
        "CloneUrlSsh": {
          "Value": { "Fn::GetAtt": ["SCPortfoliosRepo","CloneUrlSsh"] },
          "Description": "URL for ssh cloning the Product Repo"
        },		
		"CloneUrlHttp": {		
          "Value": { "Fn::GetAtt": ["SCPortfoliosRepo","CloneUrlHttp"] },
          "Description": "URL for https cloning the Product Repo"
        }
    }
}
